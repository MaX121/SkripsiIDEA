# Scenarion.endTime in second time notation
Scenario.name = DHN NDH MIT Simulation
# Scenario.simulateConnections = true
Scenario.simulateConnections = false
Scenario.updateInterval = 0.1
Scenario.nrofHostGroups = 1
Scenario.endTime = 342915

# transmitSpeed : transmit speed of the interface (bytes per second)
# transmitRange : range of the interface (meters)
btInterface.type = SimpleBroadcastInterface
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 10

# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

# -- Reality/Random Dataset -- #
# Group.movementModel = RandomWaypoint
Group.movementModel = StationaryMovement

Group.nodeLocation = 0,1
Group.bufferSize = 10M
Group.waitTime = 0, 120
Group.nrofInterfaces = 1
Group.interface1 = btInterface
Group.speed = 60, 60
Group.msgTtl = 1000
Group.nrofHosts = 98
Group1.groupID = G
Group.router = DecisionEngineRouter
DecisionEngineRouter.decisionEngine = EpidemicRouterRevised

# Creation interval in seconds (one new message every 2500 seconds)
# Hosts : Range of message source/destination addresses [97 Nodes]
# Time : Stop create a message at an exact time defined in settings

Events.nrof = 2

Events1.class = MessageEventGenerator
Events1.interval = 5000,5000
Events1.size = 4k,4k
Events1.hosts = 0,97
Events1.prefix = M

# -- Reality/Random Dataset -- #
Events2.class = StandardEventsReader
Events2.filePath = haggle6-infocom6.csv

MovementModel.warmup = 0
MovementModel.rngSeed = 1
MovementModel.worldSize = 2500, 2500

Report.nrofReports = 3
Report.warmup = 0
Report.reportDir = reports/NDH_INFOCOM_TTL1000;
Report.report1 = MessageStatsReport
Report.report2 = KeyConvergenceReport
Report.report3 = MessageTransactionReport

Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true